{
  "major": "Computer Science",
  "pathway": {
    "Freshman Year": {
      "Fall Semester": [
        {
          "course_number": "ENGL.1010 / HONR.1100",
          "course_name": "College Writing I / First Year Seminar in Honors: Text in the City (CW)",
          "credits": 3,
          "description": "A workshop course that thoroughly explores the writing process from pre-writing to revision, with an emphasis on critical thinking, sound essay structure, mechanics, and academic integrity. Students will read, conduct rhetorical analyses, and practice the skills required for participation in academic discourse. Students will write expository essays throughout the semester, producing a minimum of four formal essays.",
          "prerequisites": "Anti Req for ENGL.1010 - students cannot receive credit for both ENGL.1010, ENGL.1110 and ENGL.1010S. Please Note: Academic petition is required for anti-req exceptions."
        },
        {
          "course_number": "COMP.1010",
          "course_name": "Computing I (STEM)",
          "credits": 3,
          "description": "Introduction to computing environments: introduction to an integrated development environment; C, C++, or a similar language.  Linear data structures; arrays, records, and linked lists.  Abstract data types, stacks, and queues.  Simple sorting via exchange, selection, and insertion, basic file I/O. Programming style documentation and testing.  Ethical and social issues.  Effective Fall 2013, Co-req 91.103 Computing 1 Lab.",
          "prerequisites": "Co-req: COMP.1030L Comp. 1 Lab."
        },
        {
          "course_number": "COMP.1030L",
          "course_name": "Computing I Lab",
          "credits": 1,
          "description": "This is the lab class for COMP.1010 Computing I. This class must be taken with COMP.1010 Computing I in the same semester.",
          "prerequisites": null
        },
        {
          "course_number": "MATH.1310",
          "course_name": "Calculus I (MATH) 1",
          "credits": 4,
          "description": "Serves as a first course in calculus. Functions, limits, continuity, derivatives, rules for differentiation of algebraic and transcendental function; chain rule, implicit differentiation, related rate problems, linearization, applied optimization, and curve sketching. Introduction to area and integration. Students are expected to have taken pre-calculus and trigonometry in order to be successful in this course.",
          "prerequisites": "Current ALEKS math placement 76-100, or MATH.1230 Precalculus II with a grade of 'C-' or higher, and Anti-req: MATH.1380 Calculus for the Life Sciences I , Please Note: Academic Petition Required for Anti-req Exceptions."
        },
        {
          "course_number": "xxxx.xxxx",
          "course_name": "Social Sciences Perspective (SS) 2",
          "credits": 3,
          "description": null,
          "prerequisites": null
        }
      ]
    },
    "Sophomore Year": {
      "Fall Semester": [
        {
          "course_number": "COMP.2010",
          "course_name": "Computing III",
          "credits": 3,
          "description": "This course presents an introduction to object-oriented software development using the C++ programming language. The main ideas are encapsulation, class hierarchy and inheritance, polymorphism, copy control, operator overloading, dynamic memory management, and templates. Additional topics include the Standard Template Library (containers and iterators), class design diagrams, and exception handling.",
          "prerequisites": "COMP.1020 Computing ll, and Co-req: COMP.2010L Computing lll Lab."
        },
        {
          "course_number": "COMP.2010R",
          "course_name": "Computing III Lab",
          "credits": 1,
          "description": null,
          "prerequisites": null
        },
        {
          "course_number": "MATH.2190",
          "course_name": "Discrete Structures I",
          "credits": 3,
          "description": "Presents propositional logic, combinatorics, methods of proof, mathematical systems, algebra of sets, matrix algebra, relations and functions, recursion and generating functions, applications to computer science, and graph theory.",
          "prerequisites": "MATH 1290 Calculus IB, or MATH 1310 Calculus I, or MATH 1380 Calc. for the Life Sciences I. or Permission of Instructor/Coordinator or Chair."
        },
        {
          "course_number": "EECE.2650",
          "course_name": "Logic Design",
          "credits": 3,
          "description": "Number systems and binary codes. Boolean algebra. Canonical and fundamental forms of Boolean functions. Function expansion and its applications to digital circuit design. Minimization of Boolean functions by Boolean algebra and Karnaugh maps. Two-level and multi-level digital circuits. Decoder, encoders, multiplexers, and de-multiplexers. Latches and flip-flops. Registers and counters. Analysis and synthesis of synchronous sequential circuits. Design of more complex circuits: data-path and control circuits. Use of software tools to implement a design on modern hardware.",
          "prerequisites": "MECH.1070 intro to Mechanical Eng, or COMP.1020 Computing II, or EECE.1070 Intro to Elec. & Comp. Engin, or EECE.2160 ECE Application Programming."
        },
        {
          "course_number": "xxxx.xxxx",
          "course_name": "Natural Science with Lab 3",
          "credits": 4,
          "description": null,
          "prerequisites": null
        }
      ]
    },
    "Junior Year": {
      "Fall Semester": [
        {
          "course_number": "COMP.3040",
          "course_name": "Foundations of Computer Science",
          "credits": 3,
          "description": "A survey of the mathematical foundations of Computer Science. Finite automata and regular languages. Stack Acceptors and Context-Free Languages. Turing Machines, recursive and recursively enumerable sets. Decidability.  Complexity. This course involves no computer programming.",
          "prerequisites": "Pre-Req: COMP 1020 Computing II, and MATH 3220 Discrete Structures II."
        },
        {
          "course_number": "COMP.3050",
          "course_name": "Computer Architecture",
          "credits": 3,
          "description": "Examines the basic functional components of a computer system including the CPU, memory systems, and I/O systems. Each of these three areas will be developed in detail with a focus on the system design and component integration. Topics will include CPU control and ALU operation, computer timing, data address and I/O bus activity, addressing model, programmed and DMA I/O, and instruction sets and micro code.",
          "prerequisites": "Pre-Req: EECE 2650 Intro to Logic Design, COMP 1020 Computing II, COMP 2030 Comp Org & Assembly Lang or EECE 3170 Microprocessor Syst Des I."
        },
        {
          "course_number": "xxxx.xxxx",
          "course_name": "Natural Science with Lab (SCL) 3",
          "credits": 4,
          "description": null,
          "prerequisites": null
        },
        {
          "course_number": "xxxx.xxxx",
          "course_name": "Arts and Humanities Perspective (AH) 2 - CS Ethics",
          "credits": 3,
          "description": null,
          "prerequisites": null
        },
        {
          "course_number": "xxxx.xxxx",
          "course_name": "Free Elective 6",
          "credits": 3,
          "description": null,
          "prerequisites": null
        }
      ]
    },
    "Senior Year": {
      "Fall Semester": [
        {
          "course_number": "COMP.4040",
          "course_name": "Analysis of Algorithms (CTPS), (IL), (QL)",
          "credits": 3,
          "description": "Development of more sophisticated ideas in data type and structure, with an introduction to the connection between data structures and the algorithms they support. Data abstraction. Controlled access structures. Trees, lists, stacks, queues, graphs, arrays, hash tables. Algorithm design strategies such as divide and conquer. Elementary techniques for analysis; asymptotic analysis, recursion equations, estimation methods, elementary combinatorial arguments. Examination of problem areas such as searching and sorting, and the indicated representations and algorithms. The student will use the techniques learned in this course and in previous courses to solve a number of logically complex programming problems using pseudocode, with an emphasis on establishing algorithmic correctness and estimating time and space complexity.",
          "prerequisites": "Pre-Reqs: COMP 1020 Computing II, MATH 3220 Discrete Structures ll and MATH 3860 Probability  & Statistics I."
        },
        {
          "course_number": "COMP.xxxx",
          "course_name": "Project Course I",
          "credits": 3,
          "description": null,
          "prerequisites": null
        },
        {
          "course_number": "COMP.xxxx",
          "course_name": "Computer Science Elective 5",
          "credits": 3,
          "description": null,
          "prerequisites": null
        },
        {
          "course_number": "xxxx.xxxx",
          "course_name": "Technical Elective 4",
          "credits": 3,
          "description": null,
          "prerequisites": null
        },
        {
          "course_number": "xxxx.xxxx",
          "course_name": "Social Sciences Perspective (SS) 2",
          "credits": 3,
          "description": null,
          "prerequisites": null
        }
      ]
    }
  }
}